==242675== Memcheck, a memory error detector
==242675== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==242675== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==242675== Command: ./ATPGK ../test/benchmark/Combinatory_circuits/JSON_Netlist/comb.json
==242675== Parent PID: 10145
==242675== 
==242675== 
==242675== HEAP SUMMARY:
==242675==     in use at exit: 5,636 bytes in 65 blocks
==242675==   total heap usage: 3,125 allocs, 3,060 frees, 445,786 bytes allocated
==242675== 
==242675== 5,636 (240 direct, 5,396 indirect) bytes in 1 blocks are definitely lost in loss record 21 of 21
==242675==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==242675==    by 0x4F4B369: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Complexcell::Mux, std::allocator<Complexcell::Mux>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
==242675==    by 0x4F4A378: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Complexcell::Mux, std::allocator<Complexcell::Mux>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Complexcell::Mux, std::allocator<Complexcell::Mux>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
==242675==    by 0x4F48E67: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Complexcell::Mux, std::allocator<Complexcell::Mux>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Complexcell::Mux, std::allocator<Complexcell::Mux>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Complexcell::Mux, std::allocator<Complexcell::Mux>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
==242675==    by 0x4FDAB77: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Complexcell::Mux, std::allocator<Complexcell::Mux>, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(Complexcell::Mux*&, std::_Sp_alloc_shared_tag<std::allocator<Complexcell::Mux> >, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (shared_ptr_base.h:648)
==242675==    by 0x4FD8A17: std::__shared_ptr<Complexcell::Mux, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Complexcell::Mux>, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::_Sp_alloc_shared_tag<std::allocator<Complexcell::Mux> >, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (shared_ptr_base.h:1342)
==242675==    by 0x4FD7C36: std::shared_ptr<Complexcell::Mux>::shared_ptr<std::allocator<Complexcell::Mux>, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::_Sp_alloc_shared_tag<std::allocator<Complexcell::Mux> >, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (shared_ptr.h:409)
==242675==    by 0x4FD6962: std::shared_ptr<Complexcell::Mux> std::allocate_shared<Complexcell::Mux, std::allocator<Complexcell::Mux>, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::allocator<Complexcell::Mux> const&, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (shared_ptr.h:863)
==242675==    by 0x4FD4CCA: std::shared_ptr<Complexcell::Mux> std::make_shared<Complexcell::Mux, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (shared_ptr.h:879)
==242675==    by 0x4FD224D: BuilderAPI::createNewCell(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (builder_API.cpp:65)
==242675==    by 0x4FD2BA2: BuilderAPI::createAndAddNodeToTree(std::shared_ptr<Tree>, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (builder_API.cpp:118)
==242675==    by 0x491ED62: Reader::read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<Tree>) (reader.cpp:60)
==242675== 
==242675== LEAK SUMMARY:
==242675==    definitely lost: 240 bytes in 1 blocks
==242675==    indirectly lost: 5,396 bytes in 64 blocks
==242675==      possibly lost: 0 bytes in 0 blocks
==242675==    still reachable: 0 bytes in 0 blocks
==242675==         suppressed: 0 bytes in 0 blocks
==242675== 
==242675== For lists of detected and suppressed errors, rerun with: -s
==242675== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
